import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  ifDefined
} from "./chunk-WM6KVWRK.js";
import {
  property
} from "./chunk-4DQU66N6.js";
import {
  css,
  customElement,
  elementStyles,
  resetStyles
} from "./chunk-J7DBC6NA.js";
import {
  LitElement,
  html
} from "./chunk-S23HMWR6.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-IJ3OGCUL.js";

// node_modules/@reown/appkit-ui/dist/esm/exports/wui-list-item.js
var import_dist7 = __toESM(require_dist());
var import_dist8 = __toESM(require_dist2());
var import_dist9 = __toESM(require_dist3());

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-item/index.js
var import_dist4 = __toESM(require_dist(), 1);
var import_dist5 = __toESM(require_dist2(), 1);
var import_dist6 = __toESM(require_dist3(), 1);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-item/styles.js
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
var styles_default = css`
  :host {
    width: 100%;
  }

  button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: ${({ spacing }) => spacing[3]};
    width: 100%;
    background-color: ${({ tokens }) => tokens.theme.backgroundPrimary};
    border-radius: ${({ borderRadius }) => borderRadius[4]};
    transition:
      background-color ${({ durations }) => durations["lg"]}
        ${({ easings }) => easings["ease-out-power-2"]},
      scale ${({ durations }) => durations["lg"]} ${({ easings }) => easings["ease-out-power-2"]};
    will-change: background-color, scale;
  }

  wui-text {
    text-transform: capitalize;
  }

  wui-image {
    color: ${({ tokens }) => tokens.theme.textPrimary};
  }

  @media (hover: hover) {
    button:hover:enabled {
      background-color: ${({ tokens }) => tokens.theme.foregroundPrimary};
    }
  }

  button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-item/index.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WuiListItem = class WuiListItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = "google";
    this.loading = false;
    this.disabled = false;
    this.rightIcon = true;
    this.rounded = false;
    this.fullSize = false;
  }
  render() {
    this.dataset["rounded"] = this.rounded ? "true" : "false";
    return html`
      <button
        ?disabled=${this.loading ? true : Boolean(this.disabled)}
        data-loading=${this.loading}
        tabindex=${ifDefined(this.tabIdx)}
      >
        <wui-flex gap="2" alignItems="center">
          ${this.templateLeftIcon()}
          <wui-flex gap="1">
            <slot></slot>
          </wui-flex>
        </wui-flex>
        ${this.templateRightIcon()}
      </button>
    `;
  }
  templateLeftIcon() {
    if (this.icon) {
      return html`<wui-image
        icon=${this.icon}
        iconColor=${ifDefined(this.iconColor)}
        ?boxed=${true}
        ?rounded=${this.rounded}
      ></wui-image>`;
    }
    return html`<wui-image
      ?boxed=${true}
      ?rounded=${this.rounded}
      ?fullSize=${this.fullSize}
      src=${this.imageSrc}
    ></wui-image>`;
  }
  templateRightIcon() {
    if (!this.rightIcon) {
      return null;
    }
    if (this.loading) {
      return html`<wui-loading-spinner size="md" color="accent-primary"></wui-loading-spinner>`;
    }
    return html`<wui-icon name="chevronRight" size="lg" color="default"></wui-icon>`;
  }
};
WuiListItem.styles = [resetStyles, elementStyles, styles_default];
__decorate([
  property()
], WuiListItem.prototype, "imageSrc", void 0);
__decorate([
  property()
], WuiListItem.prototype, "icon", void 0);
__decorate([
  property()
], WuiListItem.prototype, "iconColor", void 0);
__decorate([
  property({ type: Boolean })
], WuiListItem.prototype, "loading", void 0);
__decorate([
  property()
], WuiListItem.prototype, "tabIdx", void 0);
__decorate([
  property({ type: Boolean })
], WuiListItem.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean })
], WuiListItem.prototype, "rightIcon", void 0);
__decorate([
  property({ type: Boolean })
], WuiListItem.prototype, "rounded", void 0);
__decorate([
  property({ type: Boolean })
], WuiListItem.prototype, "fullSize", void 0);
WuiListItem = __decorate([
  customElement("wui-list-item")
], WuiListItem);
//# sourceMappingURL=chunk-XHWFNSUA.js.map
