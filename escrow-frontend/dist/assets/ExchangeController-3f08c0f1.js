import{p as U,s as x,a as b,g as N,b as A,B as I,O as m,C as E,c as L,d as T,f as P,S as f,e as W,E as C,A as p,h as _,i as F}from"./index-d3e05a27.js";const v=0,S={paymentAsset:null,amount:0,tokenAmount:0,priceLoading:!1,error:null,exchanges:[],isLoading:!1,currentPayment:void 0,isPaymentInProgress:!1,paymentId:"",assets:[]},e=U(S),u={state:e,subscribe(n){return x(e,()=>n(e))},subscribeKey(n,t){return b(e,n,t)},resetState(){Object.assign(e,{...S})},async getAssetsForNetwork(n){const t=N(n),s=await u.getAssetsImageAndPrice(t),r=t.map(a=>{var i,l,y,g;const c=a.asset==="native"?A():`${a.network}:${a.asset}`,o=s.find(k=>{var d,h,w;return((w=(h=(d=k.fungibles)==null?void 0:d[0])==null?void 0:h.address)==null?void 0:w.toLowerCase())===c.toLowerCase()});return{...a,price:((l=(i=o==null?void 0:o.fungibles)==null?void 0:i[0])==null?void 0:l.price)||1,metadata:{...a.metadata,iconUrl:(g=(y=o==null?void 0:o.fungibles)==null?void 0:y[0])==null?void 0:g.iconUrl}}});return e.assets=r,r},async getAssetsImageAndPrice(n){const t=n.map(r=>r.asset==="native"?A():`${r.network}:${r.asset}`);return await Promise.all(t.map(r=>I.fetchTokenPrice({addresses:[r]})))},getTokenAmount(){var t;if(!((t=e==null?void 0:e.paymentAsset)!=null&&t.price))throw new Error("Cannot get token price");const n=new Intl.NumberFormat("en-US",{minimumFractionDigits:0,maximumFractionDigits:8}).format(e.amount/e.paymentAsset.price);return Number(n)},setAmount(n){var t;e.amount=n,(t=e.paymentAsset)!=null&&t.price&&(e.tokenAmount=u.getTokenAmount())},setPaymentAsset(n){e.paymentAsset=n},isPayWithExchangeEnabled(){var n,t,s;return((n=m.state.remoteFeatures)==null?void 0:n.payWithExchange)||((t=m.state.remoteFeatures)==null?void 0:t.payments)||((s=m.state.features)==null?void 0:s.pay)},isPayWithExchangeSupported(){return u.isPayWithExchangeEnabled()&&E.state.activeCaipNetwork&&L.PAY_WITH_EXCHANGE_SUPPORTED_CHAIN_NAMESPACES.includes(E.state.activeCaipNetwork.chainNamespace)},async fetchExchanges(){try{const n=u.isPayWithExchangeSupported();if(!e.paymentAsset||!n){e.exchanges=[],e.isLoading=!1;return}e.isLoading=!0;const t=await T({page:v,asset:P(e.paymentAsset.network,e.paymentAsset.asset),amount:e.amount.toString()});e.exchanges=t.exchanges.slice(0,2)}catch{throw f.showError("Unable to get exchanges"),new Error("Unable to get exchanges")}finally{e.isLoading=!1}},async getPayUrl(n,t){try{const s=Number(t.amount),r=await W({exchangeId:n,asset:P(t.network,t.asset),amount:s.toString(),recipient:`${t.network}:${t.recipient}`});return C.sendEvent({type:"track",event:"PAY_EXCHANGE_SELECTED",properties:{exchange:{id:n},configuration:{network:t.network,asset:t.asset,recipient:t.recipient,amount:s},currentPayment:{type:"exchange",exchangeId:n},source:"fund-from-exchange",headless:!1}}),r}catch(s){throw s instanceof Error&&s.message.includes("is not supported")?new Error("Asset not supported"):new Error(s.message)}},async handlePayWithExchange(n){try{if(!p.state.address)throw new Error("No account connected");if(!e.paymentAsset)throw new Error("No payment asset selected");const t=_.returnOpenHref("","popupWindow","scrollbar=yes,width=480,height=720");if(!t)throw new Error("Could not create popup window");e.isPaymentInProgress=!0,e.paymentId=crypto.randomUUID(),e.currentPayment={type:"exchange",exchangeId:n};const{network:s,asset:r}=e.paymentAsset,a={network:s,asset:r,amount:e.tokenAmount,recipient:p.state.address},c=await u.getPayUrl(n,a);if(!c){try{t.close()}catch(o){console.error("Unable to close popup window",o)}throw new Error("Unable to initiate payment")}e.currentPayment.sessionId=c.sessionId,e.currentPayment.status="IN_PROGRESS",e.currentPayment.exchangeId=n,t.location.href=c.url}catch{e.error="Unable to initiate payment",f.showError(e.error)}},async waitUntilComplete({exchangeId:n,sessionId:t,paymentId:s,retries:r=20}){const a=await u.getBuyStatus(n,t,s);if(a.status==="SUCCESS"||a.status==="FAILED")return a;if(r===0)throw new Error("Unable to get deposit status");return await new Promise(c=>{setTimeout(c,5e3)}),u.waitUntilComplete({exchangeId:n,sessionId:t,paymentId:s,retries:r-1})},async getBuyStatus(n,t,s){var r,a,c,o;try{if(!e.currentPayment)throw new Error("No current payment");const i=await F({sessionId:t,exchangeId:n});return e.currentPayment.status=i.status,(i.status==="SUCCESS"||i.status==="FAILED")&&(e.currentPayment.result=i.txHash,e.isPaymentInProgress=!1,C.sendEvent({type:"track",event:i.status==="SUCCESS"?"PAY_SUCCESS":"PAY_ERROR",properties:{source:"fund-from-exchange",paymentId:s,configuration:{network:((r=e.paymentAsset)==null?void 0:r.network)||"",asset:((a=e.paymentAsset)==null?void 0:a.asset)||"",recipient:p.state.address||"",amount:e.amount},currentPayment:{type:"exchange",exchangeId:(c=e.currentPayment)==null?void 0:c.exchangeId,sessionId:(o=e.currentPayment)==null?void 0:o.sessionId,result:i.txHash}}})),i}catch{return{status:"UNKNOWN",txHash:""}}},reset(){e.currentPayment=void 0,e.isPaymentInProgress=!1,e.paymentId="",e.paymentAsset=null,e.amount=0,e.tokenAmount=0,e.priceLoading=!1,e.error=null,e.exchanges=[],e.isLoading=!1}};export{u as E};
